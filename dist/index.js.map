{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import express, { Request, Response } from \"express\";\r\nimport cors from \"cors\";\r\nimport { connect } from \"./mongoConnect\";\r\n\r\nimport userService from \"./services/user-service\";\r\nimport { User } from \"./models/user\";\r\nimport apiRouter from \"./routes/api\";\r\n\r\n\r\nconst app = express();\r\nconst port = process.env.PORT || 3000;\r\napp.use(cors());\r\napp.use(express.json());\r\nconnect(\"clusteremu\"); \r\n\r\n\r\napp.get(\"/hello\", (req: Request, res: Response) => {\r\n    res.send(\"Hello, World\");\r\n});\r\n\r\n// sign up\r\napp.post(\"/api/signup\", (req: Request, res: Response) => {\r\n    const newUser = req.body; // from form\r\n    console.log(req.body)\r\n    if (!newUser.username || !newUser.password) {\r\n      res.status(400).send(\"Bad request: Invalid input data.\");\r\n    } else {\r\n      userService.createUser(newUser)\r\n        .then((createdNewUser) => userService.generateAccessToken(createdNewUser.username))\r\n        .then((token) => {\r\n          res.status(201).send({ token: token });\r\n        })\r\n      .catch(err=>res.status(500).send(err));\r\n    }\r\n  });\r\n\r\n// create new user, it's part of sign up\r\napp.post(\"/api/users\", (req: Request, res: Response) => {\r\n    const newUser = req.body;\r\n    userService\r\n    .createUser(newUser)\r\n    .then((user: User) => {\r\n        console.log(\"Create user successful\");\r\n        res.status(201).send(user);\r\n    })\r\n    .catch((err) => res.status(500).send(err));\r\n});\r\n   \r\n\r\n// login\r\napp.post(\"/api/login\", (req: Request, res: Response) => {\r\n    const { username, password } = req.body; // from form\r\n  \r\n    userService\r\n    .loginUser(username, password)\r\n    .then((token) => res.status(200).send({ token: token }))\r\n    .catch((error) => res.status(401).send(\"Unauthorized\"));\r\n\r\n});\r\n\r\napp.use(\"/api\", apiRouter);\r\n\r\n// //update existing user, moved to user-route\r\n// app.put(\"/api/users/:username\", (req: Request, res: Response) => {\r\n//     const { username } = req.params;\r\n//     const newUser = req.body;\r\n//     userService\r\n//     .update(username, newUser)\r\n//     .then((user: User) => res.json(user))\r\n//     .catch((err) => res.status(404).end());\r\n// });\r\n\r\n\r\n// // get user by username, moved to user-route\r\n// app.get(\"/api/users/:username\", (req: Request, res: Response) => {\r\n//     const { username } = req.params;\r\n//     userService\r\n//     .get(username)\r\n//     .then((user: User) => res.json(user))\r\n//     .catch((err) => res.status(404).end());\r\n// });\r\n\r\n\r\napp.get(\"/logout\", (req, res) => {});\r\n\r\napp.get(\"/api/users\", (req, res) => {});\r\n\r\napp.get(\"/api/notes/:username\", (req, res) => {});\r\n\r\n\r\napp.get(\"/favorite\", (req, res) => {});\r\n\r\napp.post(\"api/note\", (req, res) => {});\r\n\r\n\r\n\r\napp.listen(port, () => {\r\n    console.log(`Server running at http://localhost:${port}`);\r\n});"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA,qBAA2C;AAC3C,kBAAiB;AACjB,0BAAwB;AAExB,0BAAwB;AAExB,iBAAsB;AAGtB,MAAM,UAAM,eAAAA,SAAQ;AACpB,MAAM,OAAO,QAAQ,IAAI,QAAQ;AACjC,IAAI,QAAI,YAAAC,SAAK,CAAC;AACd,IAAI,IAAI,eAAAD,QAAQ,KAAK,CAAC;AAAA,IACtB,6BAAQ,YAAY;AAGpB,IAAI,IAAI,UAAU,CAAC,KAAc,QAAkB;AAC/C,MAAI,KAAK,cAAc;AAC3B,CAAC;AAGD,IAAI,KAAK,eAAe,CAAC,KAAc,QAAkB;AACrD,QAAM,UAAU,IAAI;AACpB,UAAQ,IAAI,IAAI,IAAI;AACpB,MAAI,CAAC,QAAQ,YAAY,CAAC,QAAQ,UAAU;AAC1C,QAAI,OAAO,GAAG,EAAE,KAAK,kCAAkC;AAAA,EACzD,OAAO;AACL,wBAAAE,QAAY,WAAW,OAAO,EAC3B,KAAK,CAAC,mBAAmB,oBAAAA,QAAY,oBAAoB,eAAe,QAAQ,CAAC,EACjF,KAAK,CAAC,UAAU;AACf,UAAI,OAAO,GAAG,EAAE,KAAK,EAAE,MAAa,CAAC;AAAA,IACvC,CAAC,EACF,MAAM,SAAK,IAAI,OAAO,GAAG,EAAE,KAAK,GAAG,CAAC;AAAA,EACvC;AACF,CAAC;AAGH,IAAI,KAAK,cAAc,CAAC,KAAc,QAAkB;AACpD,QAAM,UAAU,IAAI;AACpB,sBAAAA,QACC,WAAW,OAAO,EAClB,KAAK,CAAC,SAAe;AAClB,YAAQ,IAAI,wBAAwB;AACpC,QAAI,OAAO,GAAG,EAAE,KAAK,IAAI;AAAA,EAC7B,CAAC,EACA,MAAM,CAAC,QAAQ,IAAI,OAAO,GAAG,EAAE,KAAK,GAAG,CAAC;AAC7C,CAAC;AAID,IAAI,KAAK,cAAc,CAAC,KAAc,QAAkB;AACpD,QAAM,EAAE,UAAU,SAAS,IAAI,IAAI;AAEnC,sBAAAA,QACC,UAAU,UAAU,QAAQ,EAC5B,KAAK,CAAC,UAAU,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,MAAa,CAAC,CAAC,EACtD,MAAM,CAAC,UAAU,IAAI,OAAO,GAAG,EAAE,KAAK,cAAc,CAAC;AAE1D,CAAC;AAED,IAAI,IAAI,QAAQ,WAAAC,OAAS;AAuBzB,IAAI,IAAI,WAAW,CAAC,KAAK,QAAQ;AAAC,CAAC;AAEnC,IAAI,IAAI,cAAc,CAAC,KAAK,QAAQ;AAAC,CAAC;AAEtC,IAAI,IAAI,wBAAwB,CAAC,KAAK,QAAQ;AAAC,CAAC;AAGhD,IAAI,IAAI,aAAa,CAAC,KAAK,QAAQ;AAAC,CAAC;AAErC,IAAI,KAAK,YAAY,CAAC,KAAK,QAAQ;AAAC,CAAC;AAIrC,IAAI,OAAO,MAAM,MAAM;AACnB,UAAQ,IAAI,sCAAsC,IAAI,EAAE;AAC5D,CAAC;",
  "names": ["express", "cors", "userService", "apiRouter"]
}
