{
  "version": 3,
  "sources": ["../src/mongoConnect.ts"],
  "sourcesContent": ["import mongoose from \"mongoose\";\r\nimport dotenv from \"dotenv\";\r\n\r\nmongoose.set(\"debug\", true);\r\ndotenv.config();\r\n\r\nfunction getMongoURI(dbname: string) {\r\n    let connection_string = `mongodb://localhost:27017/${dbname}`;\r\n    const { MONGO_USER, MONGO_PWD, MONGO_CLUSTER } = process.env;\r\n    if (MONGO_USER && MONGO_PWD && MONGO_CLUSTER) {\r\n        console.log(\r\n            \"Connecting to MongoDB at\",\r\n            `mongodb+srv://${MONGO_USER}:<password>@${MONGO_CLUSTER}/${dbname}`\r\n        );\r\n        connection_string = `mongodb+srv://${MONGO_USER}:${MONGO_PWD}@${MONGO_CLUSTER}/${dbname}?retryWrites=true&w=majority`;\r\n    } else {\r\n        console.log(\"Connecting to MongoDB at \", connection_string);\r\n    }\r\n\r\n    return connection_string;\r\n}\r\n\r\nexport function connect(dbname: string) {\r\n    mongoose.connect(getMongoURI(dbname)).catch((error) => console.log(error));\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqB;AACrB,oBAAmB;AAEnB,gBAAAA,QAAS,IAAI,SAAS,IAAI;AAC1B,cAAAC,QAAO,OAAO;AAEd,SAAS,YAAY,QAAgB;AACjC,MAAI,oBAAoB,6BAA6B,MAAM;AAC3D,QAAM,EAAE,YAAY,WAAW,cAAc,IAAI,QAAQ;AACzD,MAAI,cAAc,aAAa,eAAe;AAC1C,YAAQ;AAAA,MACJ;AAAA,MACA,iBAAiB,UAAU,eAAe,aAAa,IAAI,MAAM;AAAA,IACrE;AACA,wBAAoB,iBAAiB,UAAU,IAAI,SAAS,IAAI,aAAa,IAAI,MAAM;AAAA,EAC3F,OAAO;AACH,YAAQ,IAAI,6BAA6B,iBAAiB;AAAA,EAC9D;AAEA,SAAO;AACX;AAEO,SAAS,QAAQ,QAAgB;AACpC,kBAAAD,QAAS,QAAQ,YAAY,MAAM,CAAC,EAAE,MAAM,CAAC,UAAU,QAAQ,IAAI,KAAK,CAAC;AAC7E;",
  "names": ["mongoose", "dotenv"]
}
